shiny::runApp('C:/R Projects/Chicago Crime Data Analysis/Chicago_Crime_Visualizations')
runApp('C:/R Projects/Chicago Crime Data Analysis/Chicago_Crime_Visualizations')
shiny::runApp('C:/R Projects/UIUC Course Data Analysis/UIUC_Course_Data_App')
AAS_100 = read.csv("course_info.csv")
AAS_100 = AAS_100[Course.Number == "AAS 100"]
setwd("C:/R Projects/UIUC Course Data Analysis/UIUC_Course_Data_App")
AAS_100 = read.csv("course_info.csv")
AAS_100 = AAS_100[Course.Number == "AAS 100"]
AAS_100 = read.csv("course_info.csv")
AAS_100 = AAS_100[AAS_100$Course.Number == "AAS 100"]
View(AAS_100)
AAS_100 = read.csv("course_info.csv")
AAS_100 = AAS_100[AAS_100$Course.Number == "AAS 100"]
AAS_100 = read.csv("course_info.csv")
AAS_100 = AAS_100 %>% subset(Course.Number == "AAS 100")
library(magrittr)
AAS_100 = AAS_100 %>% subset(Course.Number == "AAS 100")
View(AAS_100)
AAS_100 = read.csv("professor_info.csv")
AAS_100 = AAS_100 %>% subset(Course.Number == "AAS 100")
library(reshape2)
AAS_100$LetterGrade = colnames(3:9)
AAS_100$LetterGrade = colnames(3:9)
AAS_100$LetterGrade <- colnames(3:9)
library(tidyr)
long_data = gather(AAS_100, AAS_100[, 3:9])
View(long_data)
AAS_100 = read.csv("professor_info.csv")
AAS_100 = AAS_100 %>% subset(Course.Number == "AAS 100")
library(tidyr)
long_data = gather(AAS_100, key = "Letter_Grade",value = "Percent_Students" AAS_100[, 3:9])
AAS_100 = read.csv("professor_info.csv")
AAS_100 = AAS_100 %>% subset(Course.Number == "AAS 100")
library(tidyr)
long_data = gather(AAS_100, key = "Letter_Grade",value = "Percent_Students", AAS_100[, 3:9])
long_data = gather(AAS_100, key = "Letter_Grade", value = "Percent_Students", 3:9)
View(long_data)
AAS_100 = read.csv("professor_info.csv")
AAS_100 = AAS_100 %>% subset(Course.Number == "AAS 100")
library(tidyr)
long_data = gather(AAS_100, key = "Letter_Grade", value = "Percent_Students", 4:9)
View(long_data)
library(tidyr)
Professor_Info = read.csv("professor_info.csv")
AAS_100_Professors = Professor_Info %>% subset(Course.Number == "AAS 100")
long_data = gather(AAS_100, key = "Letter_Grade", value = "Percent_Students", 4:9)
cars
data()
iris
View(long_data)
shiny::runApp()
runApp()
runApp()
library(tidyr)
library(magrittr)
ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity")
long_data$Percent_Students = sub("%", "", long_data$Percent_Students) %>% as.numeric()
ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity")
ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format())
library(scales)
ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format())
ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
coord_flip()
runApp()
runApp()
runApp()
long_data$Percent_Students = sub("%", "", long_data$Percent_Students) %>% as.numeric()
ggplotly(ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
coord_flip())
ggplotly(ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()))
ggplotly(ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
coord_flip())
ggplot(long_data, aes(x = Instructor, y = Percent_Students, fill = Letter_Grade)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
coord_flip()
plot_ly(data = AAS_100_Professors, x = A, y = Instructor, type = "bar", orientation = "h", name = "% As",
marker = list(color = 'rgba(246, 78, 139, 0.6)',
line = list(color = 'rgba(246, 78, 139, 1.0)',
width = 3))) %>%
add_trace(x = B, name = '% Bs',
marker = list(color = 'rgba(58, 71, 80, 0.6)',
line = list(color = 'rgba(58, 71, 80, 1.0)',
width = 3))) %>%
layout(barmode = 'stack',
xaxis = list(title = "Percent of Students"),
yaxis = list(title = "Instructor"))
plot_ly(data = AAS_100_Professors, x = ~A, y = ~Instructor, type = "bar", orientation = "h", name = "% As",
marker = list(color = 'rgba(246, 78, 139, 0.6)',
line = list(color = 'rgba(246, 78, 139, 1.0)',
width = 3))) %>%
add_trace(x = ~B, name = '% Bs',
marker = list(color = 'rgba(58, 71, 80, 0.6)',
line = list(color = 'rgba(58, 71, 80, 1.0)',
width = 3))) %>%
layout(barmode = 'stack',
xaxis = list(title = "Percent of Students"),
yaxis = list(title = "Instructor"))
for (i in 4:9) {
AAS_100_Professors[, i] = sub("%", "", AAS_100_Professors[, i]) %>% as.numeric()
}
plot_ly(data = AAS_100_Professors, x = ~A, y = ~Instructor, type = "bar", orientation = "h", name = "% As",
marker = list(color = 'rgba(246, 78, 139, 0.6)',
line = list(color = 'rgba(246, 78, 139, 1.0)',
width = 3))) %>%
add_trace(x = ~B, name = '% Bs',
marker = list(color = 'rgba(58, 71, 80, 0.6)',
line = list(color = 'rgba(58, 71, 80, 1.0)',
width = 3))) %>%
layout(barmode = 'stack',
xaxis = list(title = "Percent of Students"),
yaxis = list(title = "Instructor"))
for (i in 4:9) {
AAS_100_Professors[, i] = sub("%", "", AAS_100_Professors[, i]) %>% as.numeric()
}
plot_ly(data = AAS_100_Professors, x = ~A, y = ~Instructor, type = "bar", orientation = "h", name = "% As",
marker = list(color = 'rgba(246, 78, 139, 0.6)',
line = list(color = 'rgba(246, 78, 139, 1.0)',
width = 3))) %>%
add_trace(x = ~B, name = '% Bs',
marker = list(color = 'rgba(58, 71, 80, 0.6)',
line = list(color = 'rgba(58, 71, 80, 1.0)',
width = 3))) %>%
layout(barmode = 'stack',
xaxis = list(title = "Percent of Students"),
yaxis = list(title = "Instructor"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help("geom_bar")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help("max")
runApp()
runApp()
runApp()
runApp()
runApp()
course_info = read.csv("course_info.csv")
min(course_info$Avg.GPA)
runApp()
runApp()
runApp()
runApp()
max(course_info$Student.Enrollment)
gen_eds = read.csv("gen_eds_info.csv")
max(gen_eds$Student.Enrollment)
max(gen_eds$Student.Enrollment[!is.na])
gen_eds = na.omit(gen_eds)
max(gen_eds$Student.Enrollment)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
course_info = read.csv("course_info.csv")
course_levels = course_info$Course.Number %>% str_extract(pattern = "[0-9]+")
course_info$Links = paste0("https://courses.illinois.edu/schedule/2018/fall/", course_info$Subject, "/", course_levels)
head(course_info$Links)
write.csv(course_info, "C:/R Projects/UIUC Course Data Analysis/UIUC_Course_Data_App/course_info.csv")
#  write.csv(professor_info, "C:/R Projects/UIUC Course Data Analysis/UIUC_Course_Data_App/professor_info.csv")
# write.csv(gen_eds, "C:/R Projects/UIUC Course Data Analysis/UIUC_Course_Data_App/gen_eds_info.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
